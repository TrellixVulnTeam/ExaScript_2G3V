<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OmniBeanLib</name>
    </assembly>
    <members>
        <member name="T:OmniBeanLib.Crypto.OBEncryption">
            <summary>
            OmniBean Library for Encryption and hash methods.
            </summary>
        </member>
        <member name="M:OmniBeanLib.Crypto.OBEncryption.AESEncrypt(System.String,System.String)">
            <summary>
            Encrypt some text using AES encryption and a password key.
            The encrypted test can be saved to a file.
            Note that if you forget the password there is NO WAY to decrypt!
            </summary>
            <param name="source">The text to encrypt.</param>
            <param name="password">The password key for the encryption.</param>
            <returns>The encrypted text (cypher).</returns>
        </member>
        <member name="M:OmniBeanLib.Crypto.OBEncryption.AESDecrypt(System.String,System.String)">
            <summary>
            Decrypt an AES encrypted cypher (previously encrypted) using a password key.
            </summary>
            <param name="cypher">The encrypted text (cypher).</param>
            <param name="password">The password key for the encryption.</param>
            <returns>The original unencrypted text or "" if password and cypher don't match.</returns>
        </member>
        <member name="M:OmniBeanLib.Crypto.OBEncryption.MD5Hash(System.String)">
            <summary>
            Create an MD5 hash of a text input (http://wikipedia.org/wiki/MD5).
            This 32 character hash is recommended where a general or shorter hash is required (password or data integrity).
            </summary>
            <param name="text">A text or password to create a hash.</param>
            <returns>The 32 character hex MD5 Hash.</returns>
        </member>
        <member name="M:OmniBeanLib.Crypto.OBEncryption.MD5HashFile(System.String)">
            <summary>
            Create an MD5 hash of a file.
            This 32 character hash is for file data integrity checks (e.g. a file contents is unchanged).
            </summary>
            <param name="fileName">The full path to a file to get the hash.</param>
            <returns>The 32 character hex MD5 Hash.</returns>
        </member>
        <member name="M:OmniBeanLib.Crypto.OBEncryption.SHA512Hash(System.String)">
            <summary>
            Create a SHA2-512 hash of a text input.
            This 128 character hash is recommended for the most secure password encryption.
            </summary>
            <param name="password">A text to create a hash (often a password).</param>
            <returns>The 128 character hex SHA512 Hash.</returns>
        </member>
        <member name="T:OmniBeanLib.OBEnvironment.OBEnvironment">
            <summary>
                  OmniBean Library for accesing Environment Properties and methods.
            </summary>
        </member>
        <member name="M:OmniBeanLib.OBEnvironment.OBEnvironment.GetCurrentUsername">
            <summary>
             Get the current username.
            </summary>
             <returns>The Current Username.</returns>        
        </member>
        <member name="M:OmniBeanLib.OBEnvironment.OBEnvironment.GetCurrentSystemName">
            <summary>
                   Get the current system machine name.
            </summary>
             <returns>The Current System Machine Name.</returns>        
        </member>
        <member name="T:OmniBeanLib.FileSystem.OBFileSystem">
            <summary>
                  OmniBean Library that allows you to store data to special directories.
            </summary>
        </member>
        <member name="M:OmniBeanLib.FileSystem.OBFileSystem.HideFolder(System.String)">
             <summary>
                   Hide a folder (Make a folder hidden)
            </summary>
            <param name="folderPath">The path of the folder to hide</param>
            <returns>Returns "Success" if successful and "Failure" if not successful.</returns>                
        </member>
        <member name="M:OmniBeanLib.FileSystem.OBFileSystem.UnhideFolder(System.String)">
             <summary>
                   Unhide a folder (Make a hidden folder visible)
            </summary>
            <param name="folderPath"></param>
            <returns>Returns "Success" if successful and "Failure" if not successful.</returns>                
        </member>
        <member name="P:OmniBeanLib.FileSystem.OBFileSystem.LocalAppDataPath">
            <summary>
                  Gets the path to the Local AppData Folder.
                  </summary>
        </member>
        <member name="P:OmniBeanLib.FileSystem.OBFileSystem.RoamingAppDataPath">
            <summary>
                  Gets the path to the Roaming AppData Folder.
                  </summary>
        </member>
        <member name="P:OmniBeanLib.FileSystem.OBFileSystem.MyDocumentsPath">
            <summary>
                  Gets the path to the My Documents Folder.
                  </summary>
        </member>
        <member name="T:OmniBeanLib.Forms.OBForms">
            <summary>
                  OmniBean Library that contains methods for forms and dialogs.
            </summary>
        </member>
        <member name="M:OmniBeanLib.Forms.OBForms.TextPrompt(System.String,System.String,System.String)">
             <summary>
                   Create a text Prompt
            </summary>
            <param name="title">The title of the prompt</param>
            <param name="prompt">The prompt</param>
            <param name="currentValue">The current Value of the prompt</param>
            <returns>Returns the dialog result.</returns>                
        </member>
        <member name="M:OmniBeanLib.Forms.OBForms.ConfirmDialog(System.String,System.String)">
             <summary>
                   Create a confirm dialog
            </summary>
            <param name="text">The text to display</param>
            <param name="title">The title of the dialog</param>        
            <returns>Nothing</returns>                
        </member>
        <member name="T:OmniBeanLib.OSShell.OS">
            <summary>
                  OmniBean Library that includes helpful methods for working with the Windows OS.
            </summary>
        </member>
        <member name="M:OmniBeanLib.OSShell.OS.StartProcess(System.String)">
            <summary>
             ShellExecutes a process (Starts a process of the specified file with the default program associated with that file.)
            </summary>
            <param name="filePath"></param>
             <returns>Returns "Success" if successful and "Failure" if not successful.</returns>        
        </member>
        <member name="M:OmniBeanLib.OSShell.OS.GetCurrentSystemName">
            <summary>
                   Get the current system machine name.
            </summary>
             <returns>The Current System Machine Name.</returns>        
        </member>
        <member name="T:OmniBeanLib.Web.OBWeb">
            <summary>
                  OmniBean Library with methods for interacting with the web.
            </summary>
        </member>
        <member name="M:OmniBeanLib.Web.OBWeb.DownloadFile(System.String,System.String)">
             <summary>
                   Download a file from the Internet. This can access any file with a URL or URI path (http:// for web, and file:/// for local)
            </summary>
            <param name="URL">The URL</param>
            <param name="downloadPath">The path to save the file to</param>
            <returns>Returns "Success" if successful and "Failure" if not successful.</returns>                
        </member>
        <member name="M:OmniBeanLib.Web.OBWeb.WebRequest(System.String)">
             <summary>
                   Perform a web request of the form HTTP_GET.
            </summary>
            <param name="URIpath">The path of the web resource</param>
             <returns>The data from the web request. In case of failure, returns "Failure"</returns>        
        </member>
    </members>
</doc>
